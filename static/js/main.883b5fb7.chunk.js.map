{"version":3,"sources":["consts/index.js","utils/index.js","components/month-dashboard/styled.js","components/common/styled.js","components/week-header/styled.js","components/week-header/WeekHeader.js","components/year-month-header/YearMonthHeader.js","components/month-dashboard/MonthDashboard.js","components/calendar/styled.js","components/calendar/Calendar.js","components/day/Day.js","components/common/scrollbar.js","components/week/styled.js","components/week/Week.js","components/mode-selector/ModeSelector.js","components/day-header/DayHeader.js","components/day/styled.js","App.js","reducer/organizerReducer.js","index.js","actions/consts.js","data/index.js"],"names":["MONTH_NAMES","WEEK_DAY_NAMES","MODES","modeOptions","value","label","yearOptions","Array","fill","map","_el","i","year","monthOptions","formatDate","dateObj","format","MM","getMonth","YYYY","getFullYear","DD","getDate","hh","getHours","mm","getMinutes","checkIsCurrentDate","date","currentDate","Date","createMonthDashboard","month","newMonth","daysInMount","getDaysInMonth","weekDay","getDay","beforeMonth","reverse","insideMonth","afterMonth","getStartWeekDate","clickedDay","MonthDashboardStyled","styled","div","MonthDayStyled","isCurrentMonth","isCurrentDate","Wrapper","OrganizerBlockWrapper","position","css","WeekDaysStyled","WeekDayStyled","WeekHeader","startWeekDate","mode","setSelectedDate","setMode","weekDays","useMemo","el","setDate","onClick","useCallback","YearMonthHeader","setYear","setMonth","setSelectedWeek","onChangeYear","onChangeMonth","$year","find","$month","options","onChange","isSearchable","MonthDashboard","data","monthDays","isCurrentWeekHovered","isCurrentWeekSelect","HeaderWrapper","Calendar","setStartWeekDate","selectedWeek","useState","hoveredWeek","setHoveredWeek","onMouseOver","weekNumber","onMouseLeave","changes","slice","currentWeek","parseInt","DayStyled","TimeInterval","Day","intervals","setMinutes","dateWithTime","scrollbarCssVisible","scrollbarCssHidden","WeekWrapper","Week","ModeSelector","option","DayHeader","DayWrapper","App","selectedDate","style","display","justifyContent","paddingBottom","paddingTop","initialState","displayMode","store","createStore","combineReducers","organizerReducer","state","action","type","events","payload","filter","id","newEvents","event","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","managerId","eventName","eventType","eventStatus","eventDate","description","firstName","lastName","salesStatus","leadId","document","getElementById"],"mappings":"0NAIaA,EAAc,CACzB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGWC,EAAiB,CAC5B,SACA,SACA,UACA,YACA,WACA,SACA,YAMWC,EACN,MADMA,EAEL,OAFKA,EAGH,SAIGC,EAAc,CACzB,CACEC,MAAOF,EACPG,MAAO,OAET,CACED,MAAOF,EACPG,MAAO,QAET,CACED,MAAOF,EACPG,MAAO,UAWEC,EAAc,IAAIC,MAFb,IAE8BC,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAChE,IAAMC,EAJW,KAISD,EAE1B,MAAO,CAAEP,MAAOQ,EAAMP,MAAOO,MAGlBC,EAAe,IAAIN,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAAN,MAAa,CACjEP,MAAOO,EACPN,MAAOL,EAAYW,O,QC9DRG,EAAa,SAACC,GAAoC,IAA3BC,EAA0B,uDAAjB,aACrCC,EACJF,EAAQG,WAAa,EAAI,GAAzB,WACQH,EAAQG,WAAa,GACzBH,EAAQG,WAAa,EACrBC,EAAOJ,EAAQK,cACfC,EAAKN,EAAQO,UAEbC,EACJR,EAAQS,WAAa,GAArB,WAA8BT,EAAQS,YAAeT,EAAQS,WACzDC,EACJV,EAAQW,aAAe,GAAvB,WACQX,EAAQW,cACZX,EAAQW,aAEd,MAAe,eAAXV,EAA+B,GAAN,OAAUK,EAAV,YAAgBJ,EAAhB,YAAsBE,GACpC,UAAXH,EAA0B,GAAN,OAAUK,EAAV,YAAgBJ,GACzB,OAAXD,EAAuB,GAAN,OAAUK,GAChB,WAAXL,EACK,CACLK,KACAJ,GAAIA,EAAK,EACTE,QAEW,UAAXH,EACI,GAAN,OAAUO,EAAV,YAAgBE,GAEH,qBAAXT,EACI,GAAN,OAAUK,EAAV,YAAgBJ,EAAhB,YAAsBE,EAAtB,YAA8BI,EAA9B,YAAoCE,QADtC,GAKWE,EAAqB,SAACC,GACjC,IAAMC,EAAc,IAAIC,KAExB,OACED,EAAYT,gBAAkBQ,EAAKR,eACnCS,EAAYX,aAAeU,EAAKV,YAChCW,EAAYP,YAAcM,EAAKN,WAItBS,EAAuB,SAAC,GAAqB,IAAnBnB,EAAkB,EAAlBA,KAAMoB,EAAY,EAAZA,MACrCC,EAAW,IAAIH,KAAKlB,EAAMoB,EAAO,GACjCE,EAjDsB,SAACtB,EAAMoB,GAEnC,OAAO,IAAIF,KAAKlB,EAAMoB,EAAQ,EAAG,GAAGV,UA+ChBa,CAAevB,EAAMoB,GACnCI,EAAUH,EAASI,SAEnBC,EAAc,IAAI/B,MAAM6B,GAC3B5B,KAAK,GACLC,KAAI,SAACC,EAAKC,GAET,OADa,IAAImB,KAAKlB,EAAMoB,EAAO,EAAIrB,MAGxC4B,UAEGC,EAAc,IAAIjC,MAAM2B,GAAa1B,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAE3D,OADa,IAAImB,KAAKlB,EAAMoB,EAAOrB,EAAI,MAInC8B,EAAa,IAAIlC,MDnEY,GCmEkB6B,EAAUF,GAC5D1B,KAAK,GACLC,KAAI,SAACC,EAAKC,GAET,OADa,IAAImB,KAAKlB,EAAMoB,EAAQ,EAAGrB,EAAI,MAK/C,MADkB,sBAAO2B,GAAP,YAAuBE,GAAvB,YAAuCC,KAI9CC,EAAmB,SAACd,GAC/B,IAAMe,EAAaf,EAAKS,SADgB,EAEfvB,EAAWc,EAAM,UAAlCP,EAFgC,EAEhCA,GAAIJ,EAF4B,EAE5BA,GAAIE,EAFwB,EAExBA,KAEhB,OADsB,IAAIW,KAAKX,EAAMF,EAAII,EAAKsB,I,wjBC/EzC,IAAMC,EAAuBC,UAAOC,IAAV,KAOpBC,EAAiBF,UAAOC,IAAV,KAOL,YAAwC,IAArCE,EAAoC,EAApCA,eACrB,OADyD,EAApBC,cACX,oBACtBD,EAAuB,qBACpB,WAOgCH,UAAOC,IAAV,K,4XCvBjC,IAAMI,EAAUL,UAAOC,IAAV,KAIPK,EAAwBN,UAAOC,IAAV,KAE9B,YAAmB,IAAhBM,EAAe,EAAfA,SACH,MAAiB,SAAbA,EACKC,cAAP,IHkBoB,SGfE,UAAbD,EACFC,cAAP,IHeqB,aGhBhB,K,6WCZJ,IAAMC,EAAiBT,UAAOC,IAAV,KAMdS,EAAgBV,UAAOC,IAAV,KCFbU,EAAa,SAAC,GAKpB,IAJLC,EAII,EAJJA,cACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,QAEMC,EAAWC,mBAAQ,WACvB,IAAMlC,EAAO,IAAIE,KAAK2B,GAAenC,UAIrC,OAHa,IAAIf,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACsD,EAAIpD,GACzC,OAAO,IAAImB,KAAK2B,GAAeO,QAAQpC,EAAOjB,MAEpCF,KAAI,SAACmB,GAAD,OAAU,IAAIE,KAAKF,QAClC,CAAC6B,IAEEQ,EAAUC,uBACd,SAACtC,GACC+B,EAAgB/B,GAChBgC,EAAQ1D,KAEV,CAACyD,EAAiBC,IAGpB,OACE,kBAACN,EAAD,KACGO,EAASpD,KAAI,SAACmB,EAAMjB,GACnB,OACE,kBAAC4C,EAAD,CAAeU,QAAS,kBAAMA,EAAQrC,KACnC3B,EAAeU,GAAI,IACnB+C,IAASxD,GAAcY,EAAWc,EAAM,e,iBC5BxCuC,EAAkB,SAAC,GAMzB,IALLvD,EAKI,EALJA,KACAoB,EAII,EAJJA,MACAoC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEMC,EAAeL,uBACnB,YAAgB,IAAb9D,EAAY,EAAZA,MACDkE,EAAgB,MAChBF,EAAQhE,KAEV,CAACiE,EAAUD,IAEPI,EAAgBN,uBACpB,YAAgB,IAAb9D,EAAY,EAAZA,MACDkE,EAAgB,MAChBD,EAASjE,KAEX,CAACiE,EAAUD,IAGPK,EAAQX,mBAAQ,WACpB,OAAOxD,EAAYoE,MAAK,qBAAGtE,QAAsBQ,OAChD,CAACA,EAAMoB,IACJ2C,EAASb,mBAAQ,WACrB,OAAOjD,EAAa6D,MAAK,qBAAGtE,QAAsB4B,OACjD,CAACA,IAEJ,OACE,6BACE,kBAAC,IAAD,CACE5B,MAAOuE,EACPC,QAAS/D,EACTgE,SAAUL,EACVM,cAAY,IAEd,kBAAC,IAAD,CACE1E,MAAOqE,EACPG,QAAStE,EACTuE,SAAUN,EACVO,cAAY,MC1BPC,EAAiB,SAAC,GAMzB,EALJC,KAKK,IAJLrB,EAII,EAJJA,gBACAC,EAGI,EAHJA,QACAhD,EAEI,EAFJA,KACAoB,EACI,EADJA,MAEMiD,EAAYnB,mBAAQ,WACxB,OAAO/B,EAAqB,CAAEnB,OAAMoB,YACnC,CAACA,EAAOpB,IAELqD,EAAUC,uBACd,SAACtC,GACC+B,EAAgB/B,GAChBgC,EAAQ1D,KAEV,CAACyD,IAGH,OACE,oCACE,kBAACf,EAAD,KACGqC,EAAUxE,KAAI,SAACsD,GACd,IAAMf,EAAiBhB,IAAU+B,EAAG7C,WAC9B+B,EAAgBtB,EAAmBoC,GAEzC,OACE,kBAAChB,EAAD,CACEC,eAAgBA,EAChBC,cAAeA,EACfgB,QAAS,kBAAMA,EAAQF,KAEtBjD,EAAWiD,U,szBCnDnB,IAEMnB,EAAuBC,UAAOC,IAAV,IAFb,iBAQPC,EAAiBF,UAAOC,IAAV,KAOL,YAKb,IAJLE,EAII,EAJJA,eACAC,EAGI,EAHJA,cACAiC,EAEI,EAFJA,qBACAC,EACI,EADJA,oBAEA,OAAIlC,EAAsB,oBAEtBiC,GAAwBC,EAA4B,oBACpDA,EAA4B,oBAC5BD,EAA6B,qBAE7BlC,EAAuB,qBAEpB,WAIEM,EAAiBT,UAAOC,IAAV,IAjCP,SAsCPS,EAAgBV,UAAOC,IAAV,KAQbsC,EAAgBvC,UAAOC,IAAV,KC7BbuC,GAAW,SAAC,GAUnB,EATJL,KASK,IARLpE,EAQI,EARJA,KACAoB,EAOI,EAPJA,MACAsD,EAMI,EANJA,iBACA1B,EAKI,EALJA,QACAS,EAII,EAJJA,SACAD,EAGI,EAHJA,QACAmB,EAEI,EAFJA,aACAjB,EACI,EADJA,gBACI,EACkCkB,mBAAS,MAD3C,mBACGC,EADH,KACgBC,EADhB,KAGET,EAAYnB,mBAAQ,WACxB,OAAO/B,EAAqB,CAAEnB,OAAMoB,YACnC,CAACA,EAAOpB,IAEL+E,EAAczB,uBAAY,SAAC0B,GAC/BF,EAAeE,KACd,IACGC,EAAe3B,uBAAY,SAAC0B,GAChCF,EAAe,QACd,IACGzB,EAAUC,uBAAY,SAAC0B,EAAYhE,GACvC,IAAM6B,EAAgBf,EAAiBd,GACvC0D,EAAiB7B,GACjBa,EAAgBsB,GAChBhC,EAAQ1D,KACP,IAEGsE,EAAgBN,uBACpB,SAAC4B,GACCxB,EAAgB,MACZtC,EAAQ8D,EAAU,IACpBzB,EAAS,GACTD,EAAQxD,EAAO,IACNoB,EAAQ8D,EAAU,EAC3BzB,EAASrC,EAAQ8D,GACR9D,EAAQ8D,EAAU,IAC3BzB,EAAS,IACTD,EAAQxD,EAAO,MAGnB,CAACA,EAAMoB,EAAOoC,EAASC,IAGzB,OACE,oCACE,kBAACe,EAAD,KACE,4BAAQnB,QAAS,kBAAMO,GAAe,KAAK,MAC1CxE,EAAYgC,GACb,4BAAQiC,QAAS,kBAAMO,EAAc,KAArC,OAGF,kBAAC,EAAD,KACGvE,EAAeQ,KAAI,SAACC,EAAKC,GACxB,OAAO,kBAAC,EAAD,KAAgBV,EAAeU,GAAGoF,MAAM,EAAG,QAItD,kBAAC,EAAD,KACGd,EAAUxE,KAAI,SAACsD,EAAIpD,GAClB,IAAMqC,EAAiBhB,IAAU+B,EAAG7C,WAC9B+B,EAAgBtB,EAAmBoC,GACnCiC,EAAcC,SAAStF,EAAI,GAC3BuE,EAAuBc,IAAgBP,EACvCN,EAAsBa,IAAgBT,EAE5C,OACE,kBAAC,EAAD,CACEvC,eAAgBA,EAChBC,cAAeA,EACfiC,qBAAsBA,EACtBC,oBAAqBA,EACrBQ,YAAa,kBAAMA,EAAYM,SAAStF,EAAI,KAC5CkF,aAAcA,EACd5B,QAAS,kBAAMA,EAAQgC,SAAStF,EAAI,GAAIoD,KAEvCjD,EAAWiD,EAAI,a,2WC3F9B,IAAMmC,GAAYrD,UAAOC,IAAV,MAOTqD,GAAetD,UAAOC,IAAV,MAWLsD,GAAM,SAAC,GAIb,IAHLxE,EAGI,EAHJA,KAGI,IAFJ+B,uBAEI,MAFc,aAEd,MADJC,eACI,MADM,aACN,EACEyC,EAAYvC,mBAAQ,WAKxB,OAJe,IAAIvD,MV5BO,IU4BeC,KAAK,GAAGC,KAAI,SAACC,EAAKC,GAEzD,OADqB,IAAImB,KAAKF,GAAM0E,WATrB,GASgC3F,MAGnCF,KAAI,SAACmB,GAAD,OAAU,IAAIE,KAAKF,QACpC,CAACA,IAEEqC,EAAUC,uBAAY,WAC1BP,EAAgB/B,GAChBgC,EAAQ,SACP,CAACD,EAAiB/B,IAErB,OACE,kBAACsE,GAAD,CAAWjC,QAASA,GACjBoC,EAAU5F,KAAI,SAAC8F,GACd,OAAO,kBAACJ,GAAD,KAAerF,EAAWyF,EAAc,e,8+BC3ChD,IAAMC,GAAsBnD,cAAH,MAqBnBoD,GAAqBpD,cAAH,M,wOCpBxB,IAAMqD,GAAc7D,UAAOC,IAAV,KAOpB2D,GAEED,ICPOG,GAAO,SAAC,GAAoC,IAAlClD,EAAiC,EAAjCA,cACfI,GADgD,EAAlBjD,KAAkB,EAAZoB,MACzB8B,mBAAQ,WACvB,IAAMlC,EAAO,IAAIE,KAAK2B,GAAenC,UAIrC,OAHa,IAAIf,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACsD,EAAIpD,GACzC,OAAO,IAAImB,KAAK2B,GAAeO,QAAQpC,EAAOjB,MAEpCF,KAAI,SAACmB,GAAD,OAAU,IAAIE,KAAKF,QAClC,CAAC6B,KAEJ,OACE,kBAACiD,GAAD,KACG7C,EAASpD,KAAI,SAACmB,GACb,OAAO,kBAAC,GAAD,CAAKA,KAAMA,SCZbgF,GAAe,SAAC,GAAuB,IAArBlD,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAC7BiD,EAAS/C,mBAAQ,WACrB,OAAO3D,EAAYuE,MAAK,qBAAGtE,QAAsBsD,OAChD,CAACA,IAEEmB,EAAWX,uBAAY,gBAAG9D,EAAH,EAAGA,MAAH,OAAewD,EAAQxD,MACpD,OAAO,kBAAC,IAAD,CAAQA,MAAOyG,EAAQjC,QAASzE,EAAa0E,SAAUA,KCNnDiC,GAAY,SAAC,GAAc,IAAZlF,EAAW,EAAXA,KAC1B,OACE,6BACG3B,EAAe2B,EAAKS,UADvB,IACmCvB,EAAWc,EAAM,W,wOCLjD,IAAMmF,GAAalE,UAAOC,IAAV,KAOnB2D,GAEED,IC+ESQ,GA3EH,SAAC,GAAa,EAAXhC,KAAY,IAAD,EACgBQ,mBAAS,MADzB,mBACjBD,EADiB,KACHjB,EADG,OAEEkB,oBAAS,IAAI1D,MAAOZ,YAFtB,mBAEjBc,EAFiB,KAEVqC,EAFU,OAGAmB,oBAAS,IAAI1D,MAAOV,eAHpB,mBAGjBR,EAHiB,KAGXwD,EAHW,OAIkBoB,mBACxC9C,EAAiB,IAAIZ,OALC,mBAIjB2B,EAJiB,KAIF6B,EAJE,OAOgBE,mBAAS,IAAI1D,MAP7B,mBAOjBmF,EAPiB,KAOHtD,EAPG,OASA6B,mBAAStF,GATT,mBASjBwD,EATiB,KASXE,EATW,KAWxB,OACE,kBAACV,EAAD,KACE,kBAACC,EAAD,CAAuBC,SAAU,QAC/B,kBAAC,GAAD,CACEkC,iBAAkBA,EAClB1E,KAAMA,EACNoB,MAAOA,EACP4B,QAASA,EACTS,SAAUA,EACVD,QAASA,EACTmB,aAAcA,EACdjB,gBAAiBA,KAGrB,kBAACnB,EAAD,CAAuBC,SAAU,SAC/B,yBACE8D,MAAO,CACLC,QAAS,OACTC,eAAgB,gBAChBC,cAAe,OACfC,WAAY,SAGd,kBAAC,EAAD,CACE1G,KAAMA,EACNwD,QAASA,EACTpC,MAAOA,EACPqC,SAAUA,EACVC,gBAAiBA,IAEnB,kBAAC,GAAD,CAAcZ,KAAMA,EAAME,QAASA,KAEpCF,IAASxD,EACR,kBAAC,GAAD,CAAW0B,KAAMqF,IAEjB,kBAAC,EAAD,CACEtD,gBAAiBA,EACjBC,QAASA,EACTH,cAAeA,EACfC,KAAMA,IAITA,IAASxD,GACR,kBAAC,EAAD,CACEyD,gBAAiBA,EACjB/C,KAAMA,EACNoB,MAAOA,EACP4B,QAASA,IAGZF,IAASxD,GACR,kBAAC,GAAD,CAAMU,KAAMA,EAAMoB,MAAOA,EAAOyB,cAAeA,IAEhDC,IAASxD,GACR,kBAAC6G,GAAD,KACE,kBAAC,GAAD,CAAKnG,KAAMA,EAAMoB,MAAOA,EAAOJ,KAAMqF,Q,iBCtE3CM,GAAe,CACnBC,YANO,SCGHC,GAAQC,aACZC,aAAgB,CAAEC,iBDKY,WAAmC,IAAlCC,EAAiC,uDAAzBN,GAAcO,EAAW,uCAChE,OAAQA,EAAOC,MACb,IEnBsB,aFoBpB,MAAO,CACLC,OAAQF,EAAOG,SAEnB,IEpBwB,eFqBtB,MAAO,CACLD,OAAQH,EAAMG,OAAOE,QAAO,qBAAGC,KAAgBL,EAAOG,QAAQE,OAElE,IE1BwB,eF2BtB,MAAO,CACLH,OAAO,GAAD,mBAAMH,EAAMG,QAAZ,CAAoBF,EAAOG,WAErC,IE7BwB,eF8BtB,IAAMG,EAAYP,EAAMG,OAAOvH,KAAI,SAAC4H,GAClC,OAAIA,EAAMF,KAAOL,EAAOG,QAAQE,GAAWE,EACpCP,EAAOG,WAEhB,MAAO,CACLD,OAAQI,GAGZ,QACE,OAAOP,MC5BXS,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUjB,MAAOA,IACf,kBAAC,GAAD,CAAKzC,KEnBc,CACvB,CACEmD,GAAI,IACJQ,UAAW,QACXC,UAAW,IACXC,UAAW,OACXC,YAAa,SACbC,UAAW,sBACXC,YAAa,KAGf,CACEC,UAAW,iCACXC,SAAU,sEACVC,YAAa,cACbhB,GAAI,IACJQ,UAAW,QACXS,OAAQ,OACRR,UAAW,OACXC,UAAW,OACXC,YAAa,SACbC,UAAW,sBACXC,YAAa,wBAGf,CACEC,UAAW,iCACXC,SAAU,sEACVC,YAAa,cACbhB,GAAI,IACJQ,UAAW,QACXS,OAAQ,OACRR,UAAW,OACXC,UAAW,OACXC,YAAa,SACbC,UAAW,sBACXC,YAAa,gBAGf,CACEC,UAAW,iCACXC,SAAU,sEACVC,YAAa,cACbhB,GAAI,IACJQ,UAAW,QACXS,OAAQ,OACRR,UAAW,OACXC,UAAW,OACXC,YAAa,SACbC,UAAW,sBACXC,YAAa,iBF5BfK,SAASC,eAAe,W","file":"static/js/main.883b5fb7.chunk.js","sourcesContent":["export const SHOW_DAYS_IN_CALENDAR = 7 * 7;\r\n\r\nexport const TIME_INTERVALS = 4 * 24;\r\n\r\nexport const MONTH_NAMES = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const WEEK_DAY_NAMES = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nexport const LEFT_WIDTH = \"250px\";\r\nexport const RIGHT_WIDTH = \"100%\";\r\n\r\nexport const MODES = {\r\n  DAY: \"DAY\",\r\n  WEEK: \"WEEK\",\r\n  MOUNTH: \"MOUNTH\",\r\n  YEAR: \"YEAR\",\r\n};\r\n\r\nexport const modeOptions = [\r\n  {\r\n    value: MODES.DAY,\r\n    label: \"Day\",\r\n  },\r\n  {\r\n    value: MODES.WEEK,\r\n    label: \"Week\",\r\n  },\r\n  {\r\n    value: MODES.MOUNTH,\r\n    label: \"Month\",\r\n  },\r\n  // {\r\n  //   value: MODES.YEAR,\r\n  //   label: \"Year\",\r\n  // },\r\n];\r\n\r\nconst START_YEAR = 2010;\r\nconst YEAR_NUMS = 15;\r\n\r\nexport const yearOptions = new Array(YEAR_NUMS).fill(0).map((_el, i) => {\r\n  const year = START_YEAR + i;\r\n\r\n  return { value: year, label: year };\r\n});\r\n\r\nexport const monthOptions = new Array(12).fill(0).map((_el, i) => ({\r\n  value: i,\r\n  label: MONTH_NAMES[i],\r\n}));\r\n","import { SHOW_DAYS_IN_CALENDAR } from \"../consts\";\r\n\r\nexport const getDaysInMonth = (year, month) => {\r\n  /* set last day in next month */\r\n  return new Date(year, month + 1, 0).getDate();\r\n};\r\n\r\nexport const formatDate = (dateObj, format = \"DD.MM.YYYY\") => {\r\n  const MM =\r\n    dateObj.getMonth() + 1 < 10\r\n      ? `0${dateObj.getMonth() + 1}`\r\n      : dateObj.getMonth() + 1;\r\n  const YYYY = dateObj.getFullYear();\r\n  const DD = dateObj.getDate();\r\n\r\n  const hh =\r\n    dateObj.getHours() < 10 ? `0${dateObj.getHours()}` : dateObj.getHours();\r\n  const mm =\r\n    dateObj.getMinutes() < 10\r\n      ? `0${dateObj.getMinutes()}`\r\n      : dateObj.getMinutes();\r\n\r\n  if (format === \"DD.MM.YYYY\") return `${DD}.${MM}.${YYYY}`;\r\n  if (format === \"DD.MM\") return `${DD}.${MM}`;\r\n  if (format === \"DD\") return `${DD}`;\r\n  if (format === \"object\")\r\n    return {\r\n      DD,\r\n      MM: MM - 1,\r\n      YYYY,\r\n    };\r\n  if (format === \"hh:mm\") {\r\n    return `${hh}:${mm}`;\r\n  }\r\n  if (format === \"DD.MM.YYYY hh:mm\") {\r\n    return `${DD}.${MM}.${YYYY} ${hh}:${mm}`;\r\n  }\r\n};\r\n\r\nexport const checkIsCurrentDate = (date) => {\r\n  const currentDate = new Date();\r\n\r\n  return (\r\n    currentDate.getFullYear() === date.getFullYear() &&\r\n    currentDate.getMonth() === date.getMonth() &&\r\n    currentDate.getDate() === date.getDate()\r\n  );\r\n};\r\n\r\nexport const createMonthDashboard = ({ year, month }) => {\r\n  const newMonth = new Date(year, month, 1);\r\n  const daysInMount = getDaysInMonth(year, month);\r\n  const weekDay = newMonth.getDay();\r\n\r\n  const beforeMonth = new Array(weekDay)\r\n    .fill(0)\r\n    .map((_el, i) => {\r\n      const date = new Date(year, month, 0 - i);\r\n      return date;\r\n    })\r\n    .reverse();\r\n\r\n  const insideMonth = new Array(daysInMount).fill(0).map((_el, i) => {\r\n    const date = new Date(year, month, i + 1);\r\n    return date;\r\n  });\r\n\r\n  const afterMonth = new Array(SHOW_DAYS_IN_CALENDAR - weekDay - daysInMount)\r\n    .fill(0)\r\n    .map((_el, i) => {\r\n      const date = new Date(year, month + 1, i + 1);\r\n      return date;\r\n    });\r\n\r\n  const newMonthDays = [...beforeMonth, ...insideMonth, ...afterMonth];\r\n  return newMonthDays;\r\n};\r\n\r\nexport const getStartWeekDate = (date) => {\r\n  const clickedDay = date.getDay();\r\n  const { DD, MM, YYYY } = formatDate(date, \"object\");\r\n  const startWeekDate = new Date(YYYY, MM, DD - clickedDay);\r\n  return startWeekDate;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const MonthDashboardStyled = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  min-width: 700px;\r\n  height: 700px;\r\n`;\r\nexport const MonthDayStyled = styled.div`\r\n  width: calc(100% / 7);\r\n  outline: 1px solid gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.2s;\r\n  background-color: ${({ isCurrentMonth, isCurrentDate }) => {\r\n    if (isCurrentDate) return \"rgb(247, 177, 85)\";\r\n    if (isCurrentMonth) return \"rgb(255, 221, 176)\";\r\n    return \"white\";\r\n  }};\r\n  :hover {\r\n    background-color: rgb(232, 238, 201);\r\n  }\r\n`;\r\n\r\nexport const MonthDashboardWrapperStyled = styled.div`\r\n  margin: 15px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { LEFT_WIDTH, RIGHT_WIDTH } from \"../../consts\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const OrganizerBlockWrapper = styled.div`\r\n  margin: 15px;\r\n  ${({ position }) => {\r\n    if (position === \"LEFT\") {\r\n      return css`\r\n        width: ${LEFT_WIDTH};\r\n      `;\r\n    } else if (position === \"RIGHT\") {\r\n      return css`\r\n        width: ${RIGHT_WIDTH};\r\n      `;\r\n    }\r\n  }}\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const WeekDaysStyled = styled.div`\r\n  width: 100%;\r\n  min-width: 700px;\r\n  display: flex;\r\n  height: 50px;\r\n`;\r\nexport const WeekDayStyled = styled.div`\r\n  width: calc(100% / 7);\r\n  outline: 1px solid gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n","import React, { useMemo, useCallback } from \"react\";\r\n\r\nimport { WeekDaysStyled, WeekDayStyled } from \"./styled\";\r\nimport { WEEK_DAY_NAMES, MODES } from \"../../consts\";\r\nimport { formatDate } from \"../../utils\";\r\n\r\nexport const WeekHeader = ({\r\n  startWeekDate,\r\n  mode,\r\n  setSelectedDate,\r\n  setMode,\r\n}) => {\r\n  const weekDays = useMemo(() => {\r\n    const date = new Date(startWeekDate).getDate();\r\n    const days = new Array(7).fill(0).map((el, i) => {\r\n      return new Date(startWeekDate).setDate(date + i);\r\n    });\r\n    return days.map((date) => new Date(date));\r\n  }, [startWeekDate]);\r\n\r\n  const onClick = useCallback(\r\n    (date) => {\r\n      setSelectedDate(date);\r\n      setMode(MODES.DAY);\r\n    },\r\n    [setSelectedDate, setMode]\r\n  );\r\n\r\n  return (\r\n    <WeekDaysStyled>\r\n      {weekDays.map((date, i) => {\r\n        return (\r\n          <WeekDayStyled onClick={() => onClick(date)}>\r\n            {WEEK_DAY_NAMES[i]}{\" \"}\r\n            {mode === MODES.WEEK && formatDate(date, \"DD.MM\")}\r\n          </WeekDayStyled>\r\n        );\r\n      })}\r\n    </WeekDaysStyled>\r\n  );\r\n};\r\n","import React, { useCallback, useMemo } from \"react\";\r\n\r\nimport Select from \"@xcritical/select\";\r\n\r\nimport { yearOptions, monthOptions } from \"../../consts\";\r\n\r\nexport const YearMonthHeader = ({\r\n  year,\r\n  month,\r\n  setYear,\r\n  setMonth,\r\n  setSelectedWeek,\r\n}) => {\r\n  const onChangeYear = useCallback(\r\n    ({ value }) => {\r\n      setSelectedWeek(null);\r\n      setYear(value);\r\n    },\r\n    [setMonth, setYear]\r\n  );\r\n  const onChangeMonth = useCallback(\r\n    ({ value }) => {\r\n      setSelectedWeek(null);\r\n      setMonth(value);\r\n    },\r\n    [setMonth, setYear]\r\n  );\r\n\r\n  const $year = useMemo(() => {\r\n    return yearOptions.find(({ value }) => value === year);\r\n  }, [year, month]);\r\n  const $month = useMemo(() => {\r\n    return monthOptions.find(({ value }) => value === month);\r\n  }, [month]);\r\n\r\n  return (\r\n    <div>\r\n      <Select\r\n        value={$month}\r\n        options={monthOptions}\r\n        onChange={onChangeMonth}\r\n        isSearchable\r\n      ></Select>\r\n      <Select\r\n        value={$year}\r\n        options={yearOptions}\r\n        onChange={onChangeYear}\r\n        isSearchable\r\n      ></Select>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\n\r\nimport { MONTH_NAMES, WEEK_DAY_NAMES, MODES } from \"../../consts\";\r\nimport { dymmyData } from \"../../data\";\r\nimport {\r\n  formatDate,\r\n  checkIsCurrentDate,\r\n  createMonthDashboard,\r\n} from \"../../utils\";\r\n\r\nimport {\r\n  MonthDashboardStyled,\r\n  MonthDayStyled,\r\n  WeekDaysStyled,\r\n  WeekDayStyled,\r\n} from \"./styled\";\r\nimport { OrganizerBlockWrapper } from \"../common/styled\";\r\nimport { WeekHeader } from \"../week-header/WeekHeader\";\r\nimport { YearMonthHeader } from \"../year-month-header\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const MonthDashboard = ({\r\n  data,\r\n  setSelectedDate,\r\n  setMode,\r\n  year,\r\n  month,\r\n}) => {\r\n  const monthDays = useMemo(() => {\r\n    return createMonthDashboard({ year, month });\r\n  }, [month, year]);\r\n\r\n  const onClick = useCallback(\r\n    (date) => {\r\n      setSelectedDate(date);\r\n      setMode(MODES.DAY);\r\n    },\r\n    [setSelectedDate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MonthDashboardStyled>\r\n        {monthDays.map((el) => {\r\n          const isCurrentMonth = month === el.getMonth();\r\n          const isCurrentDate = checkIsCurrentDate(el);\r\n\r\n          return (\r\n            <MonthDayStyled\r\n              isCurrentMonth={isCurrentMonth}\r\n              isCurrentDate={isCurrentDate}\r\n              onClick={() => onClick(el)}\r\n            >\r\n              {formatDate(el)}\r\n            </MonthDayStyled>\r\n          );\r\n        })}\r\n      </MonthDashboardStyled>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const RECT = \"250px\";\r\n\r\nexport const MonthDashboardStyled = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: ${RECT};\r\n  height: ${RECT};\r\n`;\r\nexport const MonthDayStyled = styled.div`\r\n  width: calc(100% / 7);\r\n  outline: 1px solid gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.2s;\r\n  background-color: ${({\r\n    isCurrentMonth,\r\n    isCurrentDate,\r\n    isCurrentWeekHovered,\r\n    isCurrentWeekSelect,\r\n  }) => {\r\n    if (isCurrentDate) return \"rgb(247, 177, 85)\";\r\n\r\n    if (isCurrentWeekHovered && isCurrentWeekSelect) return \"rgb(136, 196, 24)\";\r\n    if (isCurrentWeekSelect) return \"rgb(189, 241, 91)\";\r\n    if (isCurrentWeekHovered) return \"rgb(221, 253, 160)\";\r\n\r\n    if (isCurrentMonth) return \"rgb(255, 221, 176)\";\r\n\r\n    return \"white\";\r\n  }};\r\n`;\r\n\r\nexport const WeekDaysStyled = styled.div`\r\n  width: ${RECT};\r\n  display: flex;\r\n  height: 24px;\r\n`;\r\nexport const WeekDayStyled = styled.div`\r\n  width: calc(100% / 7);\r\n  outline: 1px solid gray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n","import React, { useMemo, useState, useCallback } from \"react\";\r\n\r\nimport { MONTH_NAMES, WEEK_DAY_NAMES, MODES } from \"../../consts\";\r\nimport { dymmyData } from \"../../data\";\r\nimport {\r\n  formatDate,\r\n  createMonthDashboard,\r\n  checkIsCurrentDate,\r\n  getStartWeekDate,\r\n} from \"../../utils\";\r\n\r\nimport {\r\n  MonthDashboardStyled,\r\n  MonthDayStyled,\r\n  WeekDaysStyled,\r\n  WeekDayStyled,\r\n  HeaderWrapper,\r\n} from \"./styled\";\r\n\r\nexport const Calendar = ({\r\n  data,\r\n  year,\r\n  month,\r\n  setStartWeekDate,\r\n  setMode,\r\n  setMonth,\r\n  setYear,\r\n  selectedWeek,\r\n  setSelectedWeek,\r\n}) => {\r\n  const [hoveredWeek, setHoveredWeek] = useState(null);\r\n\r\n  const monthDays = useMemo(() => {\r\n    return createMonthDashboard({ year, month });\r\n  }, [month, year]);\r\n\r\n  const onMouseOver = useCallback((weekNumber) => {\r\n    setHoveredWeek(weekNumber);\r\n  }, []);\r\n  const onMouseLeave = useCallback((weekNumber) => {\r\n    setHoveredWeek(null);\r\n  }, []);\r\n  const onClick = useCallback((weekNumber, date) => {\r\n    const startWeekDate = getStartWeekDate(date);\r\n    setStartWeekDate(startWeekDate);\r\n    setSelectedWeek(weekNumber);\r\n    setMode(MODES.WEEK);\r\n  }, []);\r\n\r\n  const onChangeMonth = useCallback(\r\n    (changes) => {\r\n      setSelectedWeek(null);\r\n      if (month + changes > 11) {\r\n        setMonth(0);\r\n        setYear(year + 1);\r\n      } else if (month + changes > 0) {\r\n        setMonth(month + changes);\r\n      } else if (month + changes < 0) {\r\n        setMonth(11);\r\n        setYear(year - 1);\r\n      }\r\n    },\r\n    [year, month, setYear, setMonth]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <HeaderWrapper>\r\n        <button onClick={() => onChangeMonth(-1)}>{\"<=\"}</button>\r\n        {MONTH_NAMES[month]}\r\n        <button onClick={() => onChangeMonth(1)}>=></button>\r\n      </HeaderWrapper>\r\n\r\n      <WeekDaysStyled>\r\n        {WEEK_DAY_NAMES.map((_el, i) => {\r\n          return <WeekDayStyled>{WEEK_DAY_NAMES[i].slice(0, 3)}</WeekDayStyled>;\r\n        })}\r\n      </WeekDaysStyled>\r\n\r\n      <MonthDashboardStyled>\r\n        {monthDays.map((el, i) => {\r\n          const isCurrentMonth = month === el.getMonth();\r\n          const isCurrentDate = checkIsCurrentDate(el);\r\n          const currentWeek = parseInt(i / 7);\r\n          const isCurrentWeekHovered = currentWeek === hoveredWeek;\r\n          const isCurrentWeekSelect = currentWeek === selectedWeek;\r\n\r\n          return (\r\n            <MonthDayStyled\r\n              isCurrentMonth={isCurrentMonth}\r\n              isCurrentDate={isCurrentDate}\r\n              isCurrentWeekHovered={isCurrentWeekHovered}\r\n              isCurrentWeekSelect={isCurrentWeekSelect}\r\n              onMouseOver={() => onMouseOver(parseInt(i / 7))}\r\n              onMouseLeave={onMouseLeave}\r\n              onClick={() => onClick(parseInt(i / 7), el)}\r\n            >\r\n              {formatDate(el, \"DD\")}\r\n            </MonthDayStyled>\r\n          );\r\n        })}\r\n      </MonthDashboardStyled>\r\n    </>\r\n  );\r\n};\r\n","import React, { useMemo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { formatDate } from \"../../utils\";\r\nimport { TIME_INTERVALS } from \"../../consts\";\r\nimport { useCallback } from \"react\";\r\n\r\nconst DayStyled = styled.div`\r\n  width: calc(100% / 7);\r\n  outline: 1px solid gray;\r\n  transition: 0.2s;\r\n  flex-grow: 2;\r\n`;\r\n\r\nconst TimeInterval = styled.div`\r\n  height: 20px;\r\n  border-top: 1px solid gray;\r\n  padding: 2px;\r\n  :hover {\r\n    background-color: rgb(232, 238, 201);\r\n  }\r\n`;\r\n\r\nconst STEP_MINUTES = 15;\r\n\r\nexport const Day = ({\r\n  date,\r\n  setSelectedDate = () => {},\r\n  setMode = () => {},\r\n}) => {\r\n  const intervals = useMemo(() => {\r\n    const result = new Array(TIME_INTERVALS).fill(0).map((_el, i) => {\r\n      const dateWithTime = new Date(date).setMinutes(i * STEP_MINUTES);\r\n      return dateWithTime;\r\n    });\r\n    return result.map((date) => new Date(date));\r\n  }, [date]);\r\n\r\n  const onClick = useCallback(() => {\r\n    setSelectedDate(date);\r\n    setMode(\"day\");\r\n  }, [setSelectedDate, date]);\r\n\r\n  return (\r\n    <DayStyled onClick={onClick}>\r\n      {intervals.map((dateWithTime) => {\r\n        return <TimeInterval>{formatDate(dateWithTime, \"hh:mm\")}</TimeInterval>;\r\n      })}\r\n    </DayStyled>\r\n  );\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\nexport const scrollbarCssVisible = css`\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0);\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: rgba(0, 0, 0, 0.8);\r\n  }\r\n  scrollbar-color: rgba(0, 0, 0, 0.2) rgba(0, 0, 0, 0);\r\n  scrollbar-width: thin;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\nexport const scrollbarCssHidden = css`\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    height: 8px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0);\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    border-radius: 5px;\r\n    background: rgba(0, 0, 0, 0);\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: rgba(0, 0, 0, 0);\r\n  }\r\n  scrollbar-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0);\r\n  scrollbar-width: thin;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { scrollbarCssVisible, scrollbarCssHidden } from \"../common/scrollbar\";\r\n\r\nexport const WeekWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: calc(100% + 8px);\r\n  min-width: 700px;\r\n  height: 700px;\r\n  overflow: auto;\r\n  ${scrollbarCssHidden};\r\n  :hover {\r\n    ${scrollbarCssVisible};\r\n  }\r\n`;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { Day } from \"../day\";\r\nimport { WeekWrapper } from \"./styled\";\r\n\r\nexport const Week = ({ startWeekDate, year, month }) => {\r\n  const weekDays = useMemo(() => {\r\n    const date = new Date(startWeekDate).getDate();\r\n    const days = new Array(7).fill(0).map((el, i) => {\r\n      return new Date(startWeekDate).setDate(date + i);\r\n    });\r\n    return days.map((date) => new Date(date));\r\n  }, [startWeekDate]);\r\n\r\n  return (\r\n    <WeekWrapper>\r\n      {weekDays.map((date) => {\r\n        return <Day date={date} />;\r\n      })}\r\n    </WeekWrapper>\r\n  );\r\n};\r\n","import React, { useMemo, useCallback } from \"react\";\r\n\r\nimport Select from \"@xcritical/select\";\r\nimport { modeOptions } from \"../../consts\";\r\n\r\nexport const ModeSelector = ({ mode, setMode }) => {\r\n  const option = useMemo(() => {\r\n    return modeOptions.find(({ value }) => value === mode);\r\n  }, [mode]);\r\n\r\n  const onChange = useCallback(({ value }) => setMode(value));\r\n  return <Select value={option} options={modeOptions} onChange={onChange} />;\r\n};\r\n","import React from \"react\";\r\nimport { WeekDayStyled } from \"../week-header/styled\";\r\nimport { WEEK_DAY_NAMES } from \"../../consts\";\r\nimport { formatDate } from \"../../utils\";\r\n\r\nexport const DayHeader = ({ date }) => {\r\n  return (\r\n    <div>\r\n      {WEEK_DAY_NAMES[date.getDay()]} {formatDate(date, \"DD.MM\")}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { scrollbarCssHidden, scrollbarCssVisible } from \"../common/scrollbar\";\r\n\r\nexport const DayWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: calc(100% + 8px);\r\n  min-width: 700px;\r\n  height: 700px;\r\n  overflow: auto;\r\n  ${scrollbarCssHidden};\r\n  :hover {\r\n    ${scrollbarCssVisible};\r\n  }\r\n`;\r\n","import React, { useMemo, useState } from \"react\";\n\nimport { dymmyData } from \"./data\";\nimport { MonthDashboard } from \"./components/month-dashboard/MonthDashboard\";\nimport { Calendar } from \"./components/calendar\";\nimport { Wrapper, OrganizerBlockWrapper } from \"./components/common/styled\";\nimport { Week } from \"./components/week/Week\";\nimport { YearMonthHeader } from \"./components/year-month-header\";\nimport { WeekHeader } from \"./components/week-header\";\nimport { ModeSelector } from \"./components/mode-selector\";\nimport { DayHeader } from \"./components/day-header\";\nimport { getStartWeekDate } from \"./utils\";\nimport { Day } from \"./components/day\";\nimport { DayWrapper } from \"./components/day/styled\";\nimport { MODES } from \"./consts\";\n\nconst App = ({ data }) => {\n  const [selectedWeek, setSelectedWeek] = useState(null);\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [startWeekDate, setStartWeekDate] = useState(\n    getStartWeekDate(new Date())\n  );\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const [mode, setMode] = useState(MODES.MOUNTH);\n\n  return (\n    <Wrapper>\n      <OrganizerBlockWrapper position={\"LEFT\"}>\n        <Calendar\n          setStartWeekDate={setStartWeekDate}\n          year={year}\n          month={month}\n          setMode={setMode}\n          setMonth={setMonth}\n          setYear={setYear}\n          selectedWeek={selectedWeek}\n          setSelectedWeek={setSelectedWeek}\n        />\n      </OrganizerBlockWrapper>\n      <OrganizerBlockWrapper position={\"RIGHT\"}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            paddingBottom: \"10px\",\n            paddingTop: \"10px\",\n          }}\n        >\n          <YearMonthHeader\n            year={year}\n            setYear={setYear}\n            month={month}\n            setMonth={setMonth}\n            setSelectedWeek={setSelectedWeek}\n          />\n          <ModeSelector mode={mode} setMode={setMode} />\n        </div>\n        {mode === MODES.DAY ? (\n          <DayHeader date={selectedDate} />\n        ) : (\n          <WeekHeader\n            setSelectedDate={setSelectedDate}\n            setMode={setMode}\n            startWeekDate={startWeekDate}\n            mode={mode}\n          />\n        )}\n\n        {mode === MODES.MOUNTH && (\n          <MonthDashboard\n            setSelectedDate={setSelectedDate}\n            year={year}\n            month={month}\n            setMode={setMode}\n          />\n        )}\n        {mode === MODES.WEEK && (\n          <Week year={year} month={month} startWeekDate={startWeekDate} />\n        )}\n        {mode === MODES.DAY && (\n          <DayWrapper>\n            <Day year={year} month={month} date={selectedDate} />\n          </DayWrapper>\n        )}\n      </OrganizerBlockWrapper>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import {\r\n  GET_EVENTS,\r\n  REMOVE_EVENT,\r\n  CREATE_EVENT,\r\n  CHANGE_EVENT,\r\n} from \"../actions/consts\";\r\n\r\nconst DISPLAY_MODE = {\r\n  MONTH: \"MONTH\",\r\n  WEEK: \"WEEK\",\r\n  DAY: \"DAY\",\r\n};\r\n\r\nconst initialState = {\r\n  displayMode: DISPLAY_MODE.MONTH,\r\n};\r\n\r\nexport const organizerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_EVENTS:\r\n      return {\r\n        events: action.payload,\r\n      };\r\n    case REMOVE_EVENT:\r\n      return {\r\n        events: state.events.filter(({ id }) => id !== action.payload.id),\r\n      };\r\n    case CREATE_EVENT:\r\n      return {\r\n        events: [...state.events, action.payload],\r\n      };\r\n    case CHANGE_EVENT:\r\n      const newEvents = state.events.map((event) => {\r\n        if (event.id !== action.payload.id) return event;\r\n        return action.payload;\r\n      });\r\n      return {\r\n        events: newEvents,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { dymmyData } from \"./data\";\n\nimport \"./index.css\";\nimport { createStore, combineReducers } from \"redux\";\nimport { organizerReducer } from \"./reducer/organizerReducer\";\n\nconst store = createStore(\n  combineReducers({ organizerReducer }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App data={dymmyData} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const GET_EVENTS = \"GET_EVENTS\";\r\nexport const CREATE_EVENT = \"CREATE_EVENT\";\r\nexport const CHANGE_EVENT = \"CHANGE_EVENT\";\r\nexport const REMOVE_EVENT = \"REMOVE_EVENT\";\r\n","export const dymmyData = [\r\n  {\r\n    id: 936,\r\n    managerId: 3799200,\r\n    eventName: \"1\",\r\n    eventType: \"Call\",\r\n    eventStatus: \"Active\",\r\n    eventDate: \"2020-04-05T08:30:00\",\r\n    description: \"1\",\r\n  },\r\n\r\n  {\r\n    firstName: \"وجدان\",\r\n    lastName: \"محمد العتيبي\",\r\n    salesStatus: \"No Response\",\r\n    id: 937,\r\n    managerId: 4159748,\r\n    leadId: 132465,\r\n    eventName: \"Test\",\r\n    eventType: \"Call\",\r\n    eventStatus: \"Active\",\r\n    eventDate: \"2020-04-14T15:00:00\",\r\n    description: \"test calendar events\",\r\n  },\r\n\r\n  {\r\n    firstName: \"وجدان\",\r\n    lastName: \"محمد العتيبي\",\r\n    salesStatus: \"No Response\",\r\n    id: 939,\r\n    managerId: 4159748,\r\n    leadId: 132465,\r\n    eventName: \"Test\",\r\n    eventType: \"Call\",\r\n    eventStatus: \"Active\",\r\n    eventDate: \"2020-04-10T08:00:00\",\r\n    description: \"fsdfsdfsdsdf\",\r\n  },\r\n\r\n  {\r\n    firstName: \"وجدان\",\r\n    lastName: \"محمد العتيبي\",\r\n    salesStatus: \"No Response\",\r\n    id: 940,\r\n    managerId: 4159748,\r\n    leadId: 132465,\r\n    eventName: \"Test\",\r\n    eventType: \"Call\",\r\n    eventStatus: \"Active\",\r\n    eventDate: \"2020-04-09T18:30:00\",\r\n    description: \"fsdfsdfs\",\r\n  },\r\n];\r\n"],"sourceRoot":""}